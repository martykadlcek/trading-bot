#
#  Defines brokers
#  
#  Each broker has a name and command line, which is executed during connection
#  to the broker
#
#  <name>=<command line> <args>
#
# The broker usually needs path to configuration file in secure_data. If the configuration file
# doesn't exists, it is created soon on later when the user sets the api keys. Without keys, the
# only public interface is available
#
# All directories are relative to this directory
#

[brokers]

coinbase=../bin/brokers/coinbase ../secure_data/coinbase
coingi=../bin/brokers/coingi ../secure_data/coingi
coinmate=../bin/brokers/coinmate ../secure_data/coinmate
poloniex=../bin/brokers/poloniex ../secure_data/poloniex
binance=../bin/brokers/binance ../secure_data/binance
deribit=../bin/brokers/deribit ../secure_data/deribit
bitmex=../bin/brokers/bitmex ../secure_data/bitmex
simplefx=../bin/brokers/simplefx ../secure_data/simplefx
trainer=../bin/brokers/trainer ../secure_data/trainer
coingi=../bin/brokers/coingi ../secure_data/coingi

[report]
## enable report broker.  

# report_broker=../bin/brokers/report_broker report_broker.conf

## Set this option to yes if you want to include simulators into reports.

# include_simulators=yes


[service]

## enable storage broker
## storage broker is used to put most of /data to external storage
## which can be for example a database
##
## note due to security reasons, the secure_data cannot be stored in database

# storage_broker=../bin/brokers/storage_broker storage_broker.conf

## set true to backup external storage locally at storage_path. This also
## helps to transfer local settings to the external storage

# backup_locally=true
